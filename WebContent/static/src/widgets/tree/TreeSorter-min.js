Ext.tree.TreeSorter=Ext.extend(Object,{constructor:function(a,c){Ext.apply(this,c);a.on({scope:this,beforechildrenrendered:this.doSort,append:this.updateSort,insert:this.updateSort,textchange:this.updateSortParent});var e=this.dir&&this.dir.toLowerCase()=="desc",h=this.property||"text",d=this.sortType,g=this.folderSort,b=this.caseSensitive===true,f=this.leafAttr||"leaf";if(Ext.isString(d)){d=Ext.data.SortTypes[d]}this.sortFn=function(n,l){var j=n.attributes,i=l.attributes;if(g){if(j[f]&&!i[f]){return 1}if(!j[f]&&i[f]){return -1}}var m=j[h],k=i[h],p=d?d(m,n):(b?m:m.toUpperCase()),o=d?d(k,l):(b?k:k.toUpperCase());if(p<o){return e?1:-1}else{if(p>o){return e?-1:1}}return 0}},doSort:function(a){a.sort(this.sortFn)},updateSort:function(a,b){if(b.childrenRendered){this.doSort.defer(1,this,[b])}},updateSortParent:function(a){var b=a.parentNode;if(b&&b.childrenRendered){this.doSort.defer(1,this,[b])}}});